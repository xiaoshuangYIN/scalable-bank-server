1. Differene between
   string str = "12345"
   str.size() = 5  // size of the string(how many bytes)
   VS
   sizeof(str) = 2 // size of the char pointer

2. read binary file VS read text file
        /*
  string file = filename;
  ifstream ifs;
  ifs.open(file, ifstream::in);
  xmlStr* xml = (xmlStr*)malloc(sizeof(xmlStr));
  if(ifs){
    // get the length of file                                                   
    ifs.seekg(0, ifs.end);
    int length = ifs.tellg();
    xml->len = length;    
    ifs.seekg(0, ifs.beg);
    // read the file into the buffer                                            
    char* buffer = new char[length];
    ifs.read(buffer, length);
    if(ifs){
      printf("all characters read successfully.\n");
      xml->str = buffer;
    }
    else{
      printf("error: only  %ld could be read\n", ifs.gcount());
      ifs.close();
      exit(1);
    }
    ifs.close();
  }
  return xml;
  */

3. convert the 64 bits integer to big Endian : 
htonll()

host to network long long int

4. serialization: memcpy, and write(fd, pointer, bytes)

5. receive on a same fd, will automatically read from the next unread part. Do not use offset with it.

6. const char*, the connent of string can not change